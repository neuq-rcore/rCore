name: Continuous Integration

on: [push]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      IS_CI_ENVIRONMENT: true

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install cross build dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-riscv64-linux-gnu
          riscv64-linux-gnu-ld --version

      - name: Setup toolchains
        run: |
          rustup toolchain install nightly
          rustup target add riscv64gc-unknown-none-elf --toolchain nightly
          rustup override set nightly
          cargo install cargo-binutils
          rustup component add llvm-tools-preview

      - name: Build
        run: make build

        # Only run tests when successfully built
      - name: Setup Qemu
        run: |
          sudo apt install -y qemu-system-misc
          qemu-system-riscv64 --version

      - name: Run
        timeout-minutes: 10
        run: make run LOG=TRACE

  code-style:
    env:
      RUSTFLAGS: "-Dwarnings"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchains
        run: |
          rustup toolchain install nightly
          rustup target add riscv64gc-unknown-none-elf --toolchain nightly
          rustup override set nightly

      - name: Install clippy
        run: rustup component add clippy --toolchain nightly

      - name: Cargo Clippy
        run: make clippy

  format-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchains
        run: |
          rustup toolchain install nightly
          rustup target add riscv64gc-unknown-none-elf --toolchain nightly
          rustup override set nightly

      - name: Install rustfmt
        run: rustup component add rustfmt --toolchain nightly

      - name: Format check
        run: cd os && cargo fmt --check
